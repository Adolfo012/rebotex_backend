# Variables de entorno para ReboteX Backend

# Puerto del servidor
PORT=3000

# Configuración de la base de datos PostgreSQL (Supabase)
DB_HOST=db.ysrjbsqalcukxjxzfqnt.supabase.co
DB_PORT=5432
DB_NAME=postgres
DB_USER=postgres
DB_PASSWORD=ReboteX@123

# Clave secreta para JWT (cambiar por una clave segura en producción)
JWT_SECRET=rebotex_super_secret_key_2024_change_in_production

# Configuración del entorno
NODE_ENV=development

# -- =====================================
# -- TABLA USUARIOS
# -- =====================================
# create table usuarios (
#     id serial primary key,
#     nombre varchar(100) not null,
#     apellidop varchar(100) not null,
#     apellidom varchar(100) not null,
#     fecha_nacimiento date,
#     genero text check (genero in ('hombre', 'mujer', 'sin mencionar')) default 'sin mencionar',
#     apodo varchar(50),
#     correo varchar(150) unique not null,
#     pass varchar(255) not null, -- se recomienda hashear
#     loaddt timestamp default current_timestamp
# );

# -- =====================================
# -- TABLA EQUIPOS
# -- =====================================
# create table equipos (
#     id serial primary key,
#     creador_id int,
#     nombre varchar(100) not null,
#     deporte varchar(50) default 'baloncesto',
#     loaddt timestamp default current_timestamp,
#     constraint fk_equipos_user foreign key (creador_id) references usuarios(id)
#         on delete cascade on update cascade
# );

# -- =====================================
# -- TABLA JUGADORES
# -- =====================================
# create table jugadores (
#     id serial primary key,
#     equipo_id int not null,
#     nombre varchar(100) not null,
#     loaddt timestamp default current_timestamp,
#     constraint fk_jugadores_equipo foreign key (equipo_id) references equipos(id)
#         on delete cascade on update cascade
# );

# -- =====================================
# -- TABLA TORNEO
# -- =====================================
# create table torneo (
#     id serial primary key,
#     organizador_id int not null,
#     nombre varchar(150) not null,
#     ubicacion varchar(150),
#     deporte varchar(50) default 'baloncesto',
#     descripcion varchar(250),
#     fecha_inicio date not null,
#     fecha_fin date,
#     modalidad text check (modalidad in ('individual', 'equipos')) default 'equipos',
#     loaddt timestamp default current_timestamp,
#     constraint fk_torneo_user foreign key (organizador_id) references usuarios(id)
#         on delete cascade on update cascade
# );

# -- =====================================
# -- TABLA TORNEO_EQUIPOS
# -- =====================================
# create table torneo_equipos (
#     id serial primary key,
#     torneo_id int not null,
#     equipo_id int not null,
#     estado text check (estado in ('pendiente', 'aceptado', 'rechazado')) default 'pendiente',
#     fecha_registro timestamp default current_timestamp,
#     constraint fk_te_torneo foreign key (torneo_id) references torneo(id)
#         on delete cascade on update cascade,
#     constraint fk_te_equipo foreign key (equipo_id) references equipos(id)
#         on delete cascade on update cascade,
#     unique (torneo_id, equipo_id)
# );

# -- =====================================
# -- TABLA TORNEO_JUGADORES
# -- =====================================
# create table torneo_jugadores (
#     id serial primary key,
#     torneo_id int not null,
#     jugador_id int not null,
#     equipo_id int not null,
#     puntos_triple int default 0,
#     puntos_doble int default 0,
#     tiros_libre int default 0,
#     total_puntos int generated always as (puntos_triple*3 + puntos_doble*2 + tiros_libre) stored,
#     loaddt timestamp default current_timestamp,
#     constraint fk_tj_torneo foreign key (torneo_id) references torneo(id)
#         on delete cascade on update cascade,
#     constraint fk_tj_jugador foreign key (jugador_id) references jugadores(id)
#         on delete cascade on update cascade,
#     constraint fk_tj_equipo foreign key (equipo_id) references equipos(id)
#         on delete cascade on update cascade,
#     unique (torneo_id, jugador_id)
# );

# -- =====================================
# -- TABLA NOTIFICACIONES
# -- =====================================
# create table notificaciones (
#     id serial primary key,
#     usuario_id int not null,
#     tipo text check (tipo in ('solicitud_torneo','aceptado','rechazado')) not null,
#     mensaje varchar(255) not null,
#     estado text check (estado in ('pendiente','leida')) default 'pendiente',
#     loaddt timestamp default current_timestamp,
#     constraint fk_notificaciones_user foreign key (usuario_id) references usuarios(id)
#         on delete cascade on update cascade
# );

# -- =====================================
# -- TABLA PARTIDOS
# -- =====================================
# create table partidos (
#     id serial primary key,
#     torneo_id int not null,
#     local_id int not null,
#     visitante_id int not null,
#     fecha_partido date not null,
#     hora_partido time not null,
#     num_jornada int not null,
#     resultado_local int default 0,
#     resultado_visitante int default 0,
#     loaddt timestamp default current_timestamp,
#     constraint fk_partidos_torneo foreign key (torneo_id) references torneo(id)
#         on delete cascade on update cascade,
#     constraint fk_partidos_local foreign key (local_id) references equipos(id)
#         on delete cascade on update cascade,
#     constraint fk_partidos_visitante foreign key (visitante_id) references equipos(id)
#         on delete cascade on update cascade
# );